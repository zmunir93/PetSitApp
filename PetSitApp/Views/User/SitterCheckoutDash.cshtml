@model PetSitApp.ViewModels.SitterCheckoutDashViewModel
<form method="post" action="@Url.Action("Checkout", "Checkout")" >
    @{
    
        <h1>@Model.Sitter.FirstName's Page</h1>

        var serviceTypes = Model.Sitter.Service.ServiceTypes;
        if (Model.Sitter.ProfilePicture != null)
        {
            var base64Image = Convert.ToBase64String(Model.Sitter.ProfilePicture);
            var imgSrc = $"data:image/png;base64, {base64Image}";
            <img class="profile-img" src="@imgSrc" alt="Sitter's Profile Picture" />
        }

        <p>ID: @Model.Id</p>
        <p>Pet Type: @Model.PetType</p>
        //<p>Service Type: @Model.ServiceType</p>
    
        if (serviceTypes != null && serviceTypes.Any())
        {
            foreach (var serviceType in serviceTypes)
            {
                <p>Service Type: @serviceType.ServiceOffered Rate: $@serviceType.Rate</p>
                int newRate = serviceType.Rate * 100;
                <p>@newRate</p>
                <input type="hidden" name="jobType" value="@serviceType.ServiceOffered" />
                <input type="hidden" name="rate" value="@newRate" />
            }
        }

        int totalDays = Model.EndDate.HasValue && Model.StartDate.HasValue
        ? (Model.EndDate.Value - Model.StartDate.Value).Days
        : 0;

        <p>Start Date: @Model.StartDate - End Date: @Model.EndDate Total Days: @totalDays</p>
        <input type="hidden" name="startDate" value="@Model.StartDate" />
        <input type="hidden" name="endDate" value="@Model.EndDate" />
        <input type="hidden" name="quantity" value="@totalDays" />
        <input type="hidden" name="sitterId" value="@Model.Sitter.Id" />
        
        <button type="submit">Book Now</button>
    }
</form>